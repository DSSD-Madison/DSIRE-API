AWSTemplateFormatVersion: "2010-09-09"
Description: "Infrastructure for the DSIRE API ecosystem"



Parameters:

  VpcId:
    Type: String
    Default: vpc-02aebef18a7738b6a
    Description: "The ID of the VPC holding the programs database"

  SecurityGroupId:
    Type: String
    Default: sg-034ea701a79012c14
    Description: "The ID of the security group in the VPC managing the programs database"

  SubnetIds:
    Type: CommaDelimitedList
    Default: "subnet-0e968dd68b1557a24"
      # TODO: we want to run in all AZs?
      # - subnet-00ff385195c1dbdb5
      # - subnet-02563ccf50bd2aba3
      # - subnet-0b828c335bdc547f1
      # - subnet-03903f9e5abb3a1f3
      # - subnet-0962f733fc73508f8



Resources:

  Api:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: DsireApi
      Description: Proxied two-stage edge gateway for the DSIRE API
      EndpointConfiguration:
        Types:
          - EDGE

  ProxyResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: Api
    Properties:
      RestApiId: !Ref Api
      ParentId: !GetAtt Api.RootResourceId
      PathPart: "{proxy+}"

  ProxyMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: ProxyResource
    Properties:
      RestApiId: !Ref Api
      ResourceId: !Ref ProxyResource
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        Type: AWS_PROXY
        # Mandatory for AWS_PROXY/lambda integration
        IntegrationHttpMethod: POST
        # TODO is this the cleanest?
        Uri: !Join ["", [!Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:", "${stageVariables.handler}", "/invocations"]]


  HandlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DsireApiHandlers
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        # TODO wildcard
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                # TODO wildcard
                Resource: "*"
          PolicyName: AllowVpcNetworking


  SesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      SecurityGroupIds:
        - !Ref SecurityGroupId
      SubnetIds: !Ref SubnetIds
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.email-smtp"

  SesIngressTraffic:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupId
      SourceSecurityGroupId: !Ref SecurityGroupId
      IpProtocol: tcp
      FromPort: 587
      ToPort: 587



Outputs:

  VpcId:
    Value: !Ref VpcId
    Export:
      Name: VpcId

  SecurityGroupId:
    Value: !Ref SecurityGroupId
    Export:
      Name: SecurityGroupId

  SubnetIds:
    Value: !Join [",", !Ref SubnetIds]
    Export:
      Name: SubnetIds


  ApiId:
    Value: !Ref Api
    Export:
      Name: ApiId

  ApiUrl:
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com"
    Export:
      Name: ApiUrl
    Description: Root URL for querying the DSIRE API

  HandlerRoleArn:
    Value: !GetAtt HandlerRole.Arn
    Export:
      Name: HandlerRoleArn
