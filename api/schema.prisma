datasource dsire {
  provider = "mysql"
  url = env("DB_URI")
}
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}


model authority {
  id            Int       @id @default(autoincrement()) @dsire.UnsignedInt
  program_id    Int       @dsire.UnsignedInt
  order         Int?
  code          String?   @dsire.VarChar(255)
  website       String?   @dsire.VarChar(255)
  enacted       DateTime? @dsire.DateTime(0)
  enactedtext   String?   @dsire.VarChar(255)
  effective     DateTime? @dsire.DateTime(0)
  effectivetext String?   @dsire.VarChar(255)
  expired       DateTime? @dsire.DateTime(0)
  expiredtext   String?   @dsire.VarChar(255)
  file_key      String?   @dsire.VarChar(255)
  file_name     String?   @dsire.VarChar(255)
  program       Program   @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_authority_program")

  @@index([program_id], map: "fk_authority_program_idx")
}

model city {
  id           Int            @id @default(autoincrement()) @dsire.UnsignedInt
  name         String?        @dsire.VarChar(255)
  state_id     Int            @dsire.UnsignedInt
  state        State          @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_city_state1")
  program_city program_city[]
  zipcode      Zip[]

  @@index([state_id], map: "fk_utility_state1_idx")
}

model contact {
  id                  Int               @id @default(autoincrement()) @dsire.UnsignedInt
  created_ts          DateTime?         @default(now()) @dsire.Timestamp(0)
  updated_ts          DateTime?         @dsire.Timestamp(0)
  first_name          String?           @dsire.VarChar(255)
  last_name           String?           @dsire.VarChar(255)
  organization_name   String?           @dsire.VarChar(45)
  web_visible_default Boolean           @default(false)
  phone               String?           @dsire.VarChar(255)
  email               String?           @dsire.VarChar(255)
  website_url         String?           @dsire.VarChar(255)
  address             String?           @dsire.VarChar(255)
  city                String?           @dsire.VarChar(255)
  state_id            Int?              @dsire.UnsignedInt
  zip                 String?           @dsire.VarChar(255)
  state               State?            @relation(fields: [state_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "contact_ibfk_1")
  program_contact     program_contact[]

  @@index([state_id], map: "state_id")
}

model county {
  id             Int              @id @default(autoincrement()) @dsire.UnsignedInt
  name           String?          @dsire.VarChar(255)
  state_id       Int?             @dsire.UnsignedInt
  state          State?           @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_county_state1")
  program_county program_county[]
  zipcode        Zip[]

  @@index([state_id], map: "fk_utility_state1_idx")
}

model energy_category {
  id                  Int                   @id @default(autoincrement()) @dsire.UnsignedInt
  name                String?               @dsire.VarChar(255)
  technology_category technology_category[]
}

/// This model has been renamed to 'Renamedexport' during introspection, because the original name 'export' is reserved.
model Renamedexport {
  id         Int      @id @default(autoincrement()) @dsire.UnsignedInt
  key        String   @dsire.VarChar(255)
  created_ts DateTime @default(now()) @dsire.Timestamp(0)
  type       String   @dsire.VarChar(8)
  size       Int      @default(0) @dsire.UnsignedInt

  @@map("export")
}

model implementing_sector {
  id      Int       @id @default(autoincrement()) @dsire.UnsignedInt
  name    String?   @dsire.VarChar(45)
  active  Boolean   @default(false)
  program Program[]
}

model parameter {
  id               Int           @id @default(autoincrement()) @dsire.UnsignedInt
  parameter_set_id Int           @dsire.UnsignedInt
  source           String?       @dsire.VarChar(45)
  qualifier        String?       @dsire.VarChar(45)
  amount           Decimal?      @dsire.Decimal(10, 4)
  units            String?       @dsire.VarChar(45)
  parameter_set    parameter_set @relation(fields: [parameter_set_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_parameter_set1")

  @@index([parameter_set_id], map: "fk_parameter_parameter_set1_idx")
}

model parameter_set {
  id                       Int                        @id @default(autoincrement()) @dsire.UnsignedInt
  program_id               Int                        @dsire.UnsignedInt
  parameter                parameter[]
  program                  Program                    @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_set_program1")
  parameter_set_sector     parameter_set_sector[]
  parameter_set_technology parameter_set_technology[]

  @@index([program_id], map: "fk_parameter_set_program1_idx")
}

model parameter_set_sector {
  sector_id     Int           @dsire.UnsignedInt
  set_id        Int           @dsire.UnsignedInt
  sector        sector        @relation(fields: [sector_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_set_sector_sector1")
  parameter_set parameter_set @relation(fields: [set_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_set_sector_set1")

  @@unique([sector_id, set_id], map: "sector_id")
  @@index([set_id], map: "fk_parameter_set_sector_set1")
}

model parameter_set_technology {
  technology_id Int           @dsire.UnsignedInt
  set_id        Int           @dsire.UnsignedInt
  parameter_set parameter_set @relation(fields: [set_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_set_technology_set1")
  technology    technology    @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parameter_set_technology_technology1")

  @@unique([technology_id, set_id], map: "technology_id")
  @@index([set_id], map: "fk_parameter_set_technology_set1")
}

model Program {
  id                      Int                  @id @default(autoincrement()) @dsire.UnsignedInt
  state_id                Int                  @dsire.UnsignedInt
  is_entire_state         Boolean              @default(false)
  implementing_sector_id  Int                  @dsire.UnsignedInt
  programCategoryId       Int                  @dsire.UnsignedInt @map("program_category_id")
  program_type_id         Int                  @dsire.UnsignedInt
  created_by_user_id      Int                  @dsire.UnsignedInt
  code                    String?              @dsire.VarChar(45)
  name                    String?              @dsire.VarChar(255)
  updated_ts              DateTime?            @dsire.DateTime(0)
  created_ts              DateTime?            @dsire.Timestamp(0)
  published               Boolean              @default(false)
  url                     String?              @dsire.VarChar(255) @map("websiteurl")
  administrator           String?              @dsire.VarChar(255)
  fundingsource           String?              @dsire.VarChar(255)
  budget                  String?              @dsire.VarChar(255)
  startDate               DateTime?            @dsire.DateTime(0) @map("start_date")
  start_date_text         String?              @dsire.VarChar(255)
  endDate                 DateTime?            @dsire.DateTime(0) @map("end_date")
  end_date_text           String?              @dsire.VarChar(255)
  summary                 String?              @dsire.Text
  additional_technologies String?              @dsire.Text
  fromSir                 Boolean              @default(false)
  authority               authority[]
  parameter_set           parameter_set[]
  implementing_sector     implementing_sector  @relation(fields: [implementing_sector_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_implementing_sector1")
  programCategory         ProgramCategory      @relation(fields: [programCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_program_category1")
  programType             ProgramType          @relation(fields: [program_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_program_type1")
  state                   State                @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_state1")
  user                    user                 @relation(fields: [created_by_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_user1")
  program_city            program_city[]
  program_contact         program_contact[]
  program_county          program_county[]
  program_detail          program_detail[]
  program_memo            program_memo[]
  program_sector          program_sector[]
  program_technology      program_technology[]
  program_utility         program_utility[]
  zips                    ProgramZip[]
  subscription_memo       subscription_memo[]

  @@index([implementing_sector_id], map: "fk_program_implementing_sector1_idx")
  @@index([programCategoryId], map: "fk_program_program_category1_idx")
  @@index([program_type_id], map: "fk_program_program_type1_idx")
  @@index([state_id], map: "fk_program_state1_idx")
  @@index([created_by_user_id], map: "fk_program_user1_idx")
  @@index([code], map: "ix_code")

  @@map("program")
}

model ProgramCategory {
  id           Int            @id @default(autoincrement()) @dsire.UnsignedInt
  name         String?        @dsire.VarChar(45)
  program      Program[]
  program_type ProgramType[]

  @@map("program_category")
}

model program_city {
  program_id Int     @dsire.UnsignedInt
  city_id    Int     @dsire.UnsignedInt
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_city_program1")
  city       city    @relation(fields: [city_id], references: [id], onUpdate: Restrict, map: "program_city_ibfk_1")

  @@unique([city_id, program_id], map: "city_id")
  @@index([program_id], map: "fk_program_city_program1_idx")
}

model program_contact {
  id         Int     @id @default(autoincrement()) @dsire.UnsignedInt
  program_id Int     @dsire.UnsignedInt
  contact_id Int     @dsire.UnsignedInt
  webvisible Boolean @default(false)
  contact    contact @relation(fields: [contact_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_contact_contact1")
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_contact_program1")

  @@index([contact_id], map: "fk_program_contact_contact1_idx")
  @@index([program_id], map: "fk_program_contact_program1_idx")
}

model program_county {
  program_id Int     @dsire.UnsignedInt
  county_id  Int     @dsire.UnsignedInt
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_county_program1")
  county     county  @relation(fields: [county_id], references: [id], onUpdate: Restrict, map: "program_county_ibfk_1")

  @@unique([county_id, program_id], map: "county_id")
  @@index([program_id], map: "fk_program_county_program1_idx")
}

model program_detail {
  id                      Int                      @id @default(autoincrement()) @dsire.UnsignedInt
  program_id              Int                      @dsire.UnsignedInt
  label                   String                   @dsire.VarChar(255)
  value                   String?                  @dsire.Text
  display_order           Int                      @default(0)
  template_id             Int?                     @dsire.UnsignedInt
  program                 Program                  @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_detail_program1")
  program_detail_template program_detail_template? @relation(fields: [template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "program_detail_ibfk_1")

  @@index([program_id], map: "fk_program_detail_program1")
  @@index([template_id], map: "fk_program_detail_template1")
}

model program_detail_template {
  id             Int              @id @default(autoincrement()) @dsire.UnsignedInt
  type_id        Int              @dsire.UnsignedInt
  label          String           @dsire.VarChar(255)
  display_order  Int              @default(0)
  program_detail program_detail[]
  program_type   ProgramType     @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_detail_type1")

  @@index([type_id], map: "fk_program_detail_type1")
}

model program_memo {
  id            Int       @id @default(autoincrement()) @dsire.UnsignedInt
  program_id    Int       @dsire.UnsignedInt
  added_by_user Int       @dsire.UnsignedInt
  added         DateTime? @dsire.DateTime(0)
  memo          String?   @dsire.Text
  program       Program   @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_memo_program1")
  user          user      @relation(fields: [added_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_memo_user1")

  @@index([program_id], map: "fk_program_memo_program1_idx")
  @@index([added_by_user], map: "fk_program_memo_user1_idx")
}

model program_sector {
  program_id Int     @dsire.UnsignedInt
  sector_id  Int     @dsire.UnsignedInt
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_sector_program1")
  sector     sector  @relation(fields: [sector_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_sector_sector1")

  @@id([program_id, sector_id])
  @@index([program_id], map: "fk_program_sector_program1_idx")
  @@index([sector_id], map: "fk_program_sector_sector1_idx")
}

model program_technology {
  program_id    Int        @dsire.UnsignedInt
  technology_id Int        @dsire.UnsignedInt
  program       Program    @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_technology_program1")
  technology    technology @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_technology_technology1")

  @@id([program_id, technology_id])
  @@index([program_id], map: "fk_program_technology_program1_idx")
  @@index([technology_id], map: "fk_program_technology_technology1_idx")
}

model ProgramType {
  id                      Int                       @id @default(autoincrement()) @dsire.UnsignedInt
  name                    String?                   @dsire.VarChar(45)
  program_category_id     Int                       @dsire.UnsignedInt
  program                 Program[]
  program_detail_template program_detail_template[]
  program_category        ProgramCategory          @relation(fields: [program_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_type_program_category1")

  @@index([program_category_id], map: "fk_program_type_program_category1_idx")

  @@map("program_type")
}

model program_utility {
  program_id Int     @dsire.UnsignedInt
  utility_id Int     @dsire.UnsignedInt
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_utility_program1")
  utility    utility @relation(fields: [utility_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_program_utility_utility1")

  @@id([program_id, utility_id])
  @@index([program_id], map: "fk_program_utility_program1_idx")
  @@index([utility_id], map: "fk_program_utility_utility1_idx")
}

model ProgramZip {
  program_id Int     @dsire.UnsignedInt
  zipcode_id Int     @dsire.UnsignedInt
  program    Program @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_zipcode_ibfk_1")
  zip        Zip     @relation(fields: [zipcode_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "program_zipcode_ibfk_2")

  @@id([program_id, zipcode_id])
  @@index([program_id], map: "program_id")
  @@index([zipcode_id], map: "zipcode_id")

  @@map("program_zipcode")
}

model search_log {
  id         Int       @id @default(autoincrement()) @dsire.UnsignedInt
  searchdate DateTime? @dsire.DateTime(0)
  ip         String?   @dsire.VarChar(45)
  filtertype String?   @dsire.VarChar(45)
  text       String?   @dsire.VarChar(45)
}

model sector {
  id                   Int                    @id @default(autoincrement()) @dsire.UnsignedInt
  name                 String?                @dsire.VarChar(45)
  fieldname            String?                @dsire.VarChar(45)
  is_selectable        Boolean                @default(true)
  parent_id            Int?                   @dsire.UnsignedInt
  parameter_set_sector parameter_set_sector[]
  program_sector       program_sector[]
  sector               sector?                @relation("sectorTosector", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sector_ibfk_1")
  other_sector         sector[]               @relation("sectorTosector")

  @@index([parent_id], map: "parent_id")
}

model State {
  id                      Int                       @id @default(autoincrement()) @dsire.UnsignedInt
  abbreviation            String                    @dsire.Char(2)
  name                    String                    @dsire.VarChar(45)
  is_territory            Boolean                   @default(false)
  city                    city[]
  contact                 contact[]
  county                  county[]
  program                 Program[]
  state_info_content      state_info_content?
  technology_info_content technology_info_content[]
  utility                 utility[]
  zipcode                 Zip[]

  @@index([abbreviation], map: "abbreviation")
  @@map("state")
}

model state_info_content {
  id                           Int     @id @default(autoincrement()) @dsire.UnsignedInt
  state_id                     Int     @unique(map: "state_id") @dsire.UnsignedInt
  introduction                 String? @dsire.Text
  history                      String? @dsire.Text
  renewable_portfolio_standard String? @dsire.Text
  organizations                String? @dsire.Text
  programs                     String? @dsire.Text
  footnotes                    String? @dsire.Text
  state                        State   @relation(fields: [state_id], references: [id], onDelete: Cascade, map: "state_info_content_ibfk_1")
}

model subscription_memo {
  id            Int       @id @default(autoincrement()) @dsire.UnsignedInt
  program_id    Int       @dsire.UnsignedInt
  added_by_user Int       @dsire.UnsignedInt
  added         DateTime? @dsire.DateTime(0)
  memo          String?   @dsire.Text
  program       Program   @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_subscription_memo_program1")
  user          user      @relation(fields: [added_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_subscription_memo_user1")

  @@index([program_id], map: "fk_subscription_memo_program1_idx")
  @@index([added_by_user], map: "fk_subscription_memo_user1_idx")
}

model technology {
  id                       Int                        @id @default(autoincrement()) @dsire.UnsignedInt
  name                     String?                    @dsire.VarChar(45)
  technology_category_id   Int                        @dsire.UnsignedInt
  active                   Boolean                    @default(false)
  parameter_set_technology parameter_set_technology[]
  program_technology       program_technology[]
  technology_category      technology_category        @relation(fields: [technology_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_technology_technology_category1")

  @@index([technology_category_id], map: "fk_technology_technology_category1_idx")
}

model technology_category {
  id                 Int             @id @default(autoincrement()) @dsire.UnsignedInt
  name               String?         @dsire.VarChar(45)
  energy_category_id Int             @dsire.UnsignedInt
  technology         technology[]
  energy_category    energy_category @relation(fields: [energy_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "technology_category_ibfk_1")

  @@index([energy_category_id], map: "energy_category_id")
}

model technology_info_content {
  id                 Int     @id @default(autoincrement()) @dsire.UnsignedInt
  state_id           Int     @dsire.UnsignedInt
  technology_filter  String  @dsire.VarChar(180)
  introduction       String? @dsire.Text
  history            String? @dsire.Text
  technology_details String? @dsire.Text
  programs           String? @dsire.Text
  footnotes          String? @dsire.Text
  state              State   @relation(fields: [state_id], references: [id], onDelete: Cascade, map: "technology_info_content_ibfk_1")

  @@unique([state_id, technology_filter], map: "state_id")
}

model user {
  id                Int                 @id @default(autoincrement()) @dsire.UnsignedInt
  email             String              @dsire.VarChar(255)
  username          String?             @dsire.VarChar(50)
  password          String?             @dsire.VarChar(128)
  password_token    String?             @dsire.VarChar(128)
  first_name        String?             @dsire.VarChar(128)
  last_name         String?             @dsire.VarChar(128)
  role              String              @default("guest") @dsire.VarChar(8)
  state             String?             @default("active") @dsire.Char(8)
  created_ts        DateTime?           @default(now()) @dsire.Timestamp(0)
  updated_ts        DateTime?           @dsire.Timestamp(0)
  program           Program[]
  program_memo      program_memo[]
  subscription_memo subscription_memo[]

  @@index([email], map: "email")
  @@index([username], map: "username")
}

model utility {
  id              Int               @id @default(autoincrement()) @dsire.UnsignedInt
  name            String?           @dsire.VarChar(255)
  state_id        Int               @dsire.UnsignedInt
  utility_id      Int
  program_utility program_utility[]
  state           State             @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_utility_state1")
  utility_zipcode utility_zipcode[]

  @@index([state_id], map: "fk_utility_state1_idx")
}

model utility_zipcode {
  utility_id Int     @dsire.UnsignedInt
  zipcode_id Int     @dsire.UnsignedInt
  utility    utility @relation(fields: [utility_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_utility_zipcode_utility1")
  zipcode    Zip     @relation(fields: [zipcode_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_utility_zipcode_zipcode1")

  @@id([utility_id, zipcode_id])
  @@index([utility_id], map: "fk_utility_zipcode_utility1_idx")
  @@index([zipcode_id], map: "fk_utility_zipcode_zipcode1_idx")
}

model Zip {
  id              Int               @id @default(autoincrement()) @dsire.UnsignedInt
  code            String            @unique(map: "zipcode") @dsire.VarChar(16) @map("zipcode")
  city_id         Int               @dsire.UnsignedInt
  state_id        Int               @dsire.UnsignedInt
  county_id       Int               @dsire.UnsignedInt
  latitude        Decimal?          @dsire.Decimal(10, 0)
  longitude       Decimal?          @dsire.Decimal(10, 0)
  program_zipcode ProgramZip[]
  utility_zipcode utility_zipcode[]
  city            city              @relation(fields: [city_id], references: [id], onUpdate: Restrict, map: "fk_zipcode_city1")
  county          county            @relation(fields: [county_id], references: [id], onUpdate: Restrict, map: "fk_zipcode_county1")
  state           State             @relation(fields: [state_id], references: [id], onUpdate: Restrict, map: "fk_zipcode_state1")

  @@index([city_id], map: "fk_zipcode_city1")
  @@index([county_id], map: "fk_zipcode_county1")
  @@index([state_id], map: "fk_zipcode_state1")

  @@map("zipcode")
}
