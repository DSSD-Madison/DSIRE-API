name: AWS Deploy
run-name: Build & deploy on AWS

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  FUNCTION_NAME_AGNES: DsireApi-Agnes-main

# Required for aws-actions/configure-aws-credentials
permissions:
  id-token: write
  contents: read


jobs:

  build-agnes:
    name: Build Agnes for Lambda
    runs-on: ubuntu-latest
    environment: AWS
    env:
      WD: agnes/

    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Node.js version ${{ vars.NODE_VERSION_GITHUB_ACTIONS }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION_GITHUB_ACTIONS }}

      - name: Set NODE_ENV for production
        run: echo "NODE_ENV=production" >> $GITHUB_ENV
        if: github.ref_name != 'test'

      - name: Install dependencies
        working-directory: ${{ env.WD }}
        run: npm ci

      - name: Bundle and minify TypeScript
        working-directory: ${{ env.WD }}
        run: npm run build

      - name: Zip package for Agnes
        working-directory: ${{ env.WD }}
        run: zip -9 -j dist/agnes.zip dist/index.cjs

      - name: Upload Agnes' package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: agnes
          path: ${{ env.WD }}/dist/agnes.zip

  deploy-agnes:
      name: Deploy Agnes on Lambda
      runs-on: ubuntu-latest
      environment: AWS
      needs:
        - build-agnes

      steps:
        - name: Download Agnes' package as artifact
          uses: actions/download-artifact@v3
          with:
            name: agnes

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-region: ${{ vars.AWS_REGION }}
            role-to-assume: ${{ secrets.AWS_CD_ROLE_ARN }}

        - name: Deploy Agnes on Lambda
          run: |
            aws lambda update-function-code --function-name="${FUNCTION_NAME_AGNES}" --zip-file 'fileb://agnes.zip'
            aws lambda wait function-updated --function-name="${FUNCTION_NAME_AGNES}"

  sync-environment-agnes:
    name: Sync env with Agnes
    runs-on: ubuntu-latest
    environment: AWS

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_CD_ROLE_ARN }}

      - name: Sync all environment variables with the Lambda environment
        env:
          DB_DATABASE: ${{ vars.DB_DATABASE }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_USER: ${{ vars.DB_USER }}
          NODE_OPTIONS: ${{ vars.NODE_OPTIONS }}
        run: |
          aws lambda update-function-configuration \
            --function-name="${FUNCTION_NAME_AGNES}" \
            --environment "Variables={DB_DATABASE='${DB_DATABASE}',
                                      DB_HOST='${DB_HOST}',
                                      DB_PASSWORD='${DB_PASSWORD}',
                                      DB_PORT='${DB_PORT}',
                                      DB_USER='${DB_USER}',
                                      NODE_OPTIONS='${NODE_OPTIONS}'}" > /dev/null
          aws lambda wait function-updated --function-name "${FUNCTION_NAME_AGNES}"
